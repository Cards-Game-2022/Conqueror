@page "/pvp"
@inject IJSRuntime JS

    
<div class="text-light">
    
    <div class="d-flex justify-content-around mt-4">
        <div>
            <h4 class="player-name">@game.Player1.Name</h4>
            <p class="bg-danger p-2 card-points">Vida : @game.Player1.Life</p>
        </div>
        <div>
            <h4 class="player-name">@game.Player2.Name</h4>
            <p class="bg-danger p-2 card-points">Vida : @game.Player2.Life</p>
        </div>
    </div>

    <div class="row mt-5 players-field">
        <div class="col-5">
            <img src="@game.Player1.UrlPhoto" alt="" class="img-fluid img-player">
            <div id="text" class="text-black p-1 text-center text">
                <p>Ponte a programar. Ponte a programar</p>
            </div>
        </div>
        <div class="col-2"></div> 
        <div class="col-5">
            <img src="@game.Player2.UrlPhoto" alt="" class="img-fluid img-player">
            <div id="text" class="text-black p-1 text-center text">
                <p>Ponte a programar. Ponte a programar</p>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-around mt-5">
        <div>
            <div class="text-light bg-gradient bg-dark p-2">
                Charms: @game.Player1.Charms
            </div>
        </div>

        <div class="d-flex justify-content-center flex-wrap text-black ms-2 me-2">
            @foreach (var item in game.Player1.Hand.CardsList)
            {
                <div class="cursor mt-1 me-1" @onclick="@(e => Modal(@item))"  data-bs-toggle="modal" data-bs-target="#exampleModalCenteredScrollable">
                    <div class="card my-card">
                        <img src="@item.UrlPhoto" class="img-fluid m-1" alt="">

                        <div class="card-body p-2">
                            <p class="m-0 p-0 card-text">@item.Name</p> 
                            <span class="m-0 p-0 text-muted">Charms: @item.Charms</span>
                        </div>
                    </div>
                </div>
            }     
        </div>
        
        <div>
            <button class="btn btn-primary" @onclick="ChangePlayers">Fin del Turno</button>
        </div>
    </div>

    


    <div class="modal fade text-black" id="exampleModalCenteredScrollable" tabindex="-1"
        aria-labelledby="exampleModalCenteredScrollableTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenteredScrollableTitle">@name</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <img src="@photo" alt="" width="450" height="500">

                    <p>@text</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Atras</button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="Launch">Lanzar</button>
                </div>
            </div>
        </div>
    </div>

</div>

@{
    Background(); 
}

@code{
    private Game game = new Game(0);
    private int id;
    private string name;
    private string photo;
    private string text;
    private int pos = -1;
    private bool gameStart;

    private async void Background() {
        await JS.InvokeVoidAsync("GameEnvironmentBg");
    }
    
    private void Launch(){
        try
        {
            if (game.IsGameEnd() != null) {
                return;
            }

            pos = GetPos();
            game.Player1.Pos = pos;
            game.Activate();// activa la carta que se selecciono

            // chequea si el juego termino
            string winner = game.IsGameEnd();
            if (winner != null) {
                Console.WriteLine("El ganador es : " + winner);
            } else {
                pos = -1;                
            }
            ResetModal(); // quita todos los datos del modal
        }
        catch (System.Exception e)
        {
            Console.WriteLine(e.Message);
        }
        
    }


    private int GetPos() {
        for (int i = 0; i < game.Player1.Hand.CardsList.Count; i++)
        {
            if (game.Player1.Hand.CardsList[i].Id == id) {
            //Console.WriteLine(game.Player1.Hand.CardsList[i].Id + " " + id);
                return i;
            }
        }
        return -1;
    }

    private void ChangePlayers() {
        game.ChangePlayers();
        game.DrawCard();
        game.AddCharms();
    }

    private void Modal(Card cd) { 
        this.id =  cd.Id;
        name = cd.Name;
        photo = cd.UrlPhoto;
        text = cd.Text;
    }

    private void ResetModal() {
        id = -1;
        name = null;
        photo = null;
        text = null;
    }

    private async void Click() {
        await JS.InvokeVoidAsync("message");
    }
}
