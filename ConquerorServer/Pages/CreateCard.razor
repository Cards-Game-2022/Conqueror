@page "/createCard"
@inject IJSRuntime JS;


<h1 class="text-center" id="">Crear Carta</h1>
<form action="mt-5" autocomplete="off">
    <div class="row">
        <div class="col-12 col-lg-4">
            <div class="form-floating mb-3 Floating-Form">
                <input type="text" class="form-control rounded-4 Form-Elements" id="floatingInput" placeholder="Nombre de la Carta">
                <label for="floatingInput">Nombre de la Carta: </label>
            </div>
            <div class="form-floating mb-3 Floating-Form">
                <input type="text" class="form-control rounded-4 Form-Elements" id="floatingPassword" placeholder="Texto">
                <label for="floatingPassword">Texto de la Carta simplificado: </label>
            </div>
            <div class="form-floating mb-3 Floating-Form">
                <input type="number" class="form-control rounded-4 Form-Elements" id="floatingPassword" placeholder="Texto">
                <label for="floatingPassword">Coste de Puntos: </label>
            </div>
            <div class="form-floating mb-3 Floating-Form">
                <!--
                <input type="file" class="form-control rounded-4" id="floatingPassword" placeholder="puta"/>
                <label>Select image to upload: <input type="button" /></label>
                -->
                <input type="file" class="form-control rounded-4 Form-Elements" id="floatingPassword" placeholder="Texto">
                <label for="floatingPassword">Imagen: </label>
                
            </div>
        </div>
        <div class="col-12 col-lg-8">
            <div class="text-center mt-2">
                <div>
                    <h3>Forma de usar el mini-lenguaje para crear efectos</h3>
                    <p>No existen variables excepto las definidas en el lenguaje, las cuales detallaremos ahora.</p>

                    <div class="bg-black p-3">
                        <code>LifeP1,
                        LifeP2,
                        HandP1,
                        HandP2,
                        MazoP1,
                        MazoP2,
                        PointP1,
                        PointP2</code> 
                    </div>
                </div>

                <p class="text-light mt-5">Editor de texto:</p>
                <div class="form-floating mb-3">
                    <textarea name="" id="" cols="40" rows="20"></textarea>
                </div>

                <div class="mb-3 d-flex justify-content-around">
                    <button class="btn btn-primary">Atr√°s</button>
                    <button class="btn btn-primary" @onclick="Handler">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
</form>



@{
    CreateCardBg();    
}

@code{  
    private string name = "";
    private void Handler(){
    name=" a ";

    }

    private async void CreateCardBg() {
        await JS.InvokeVoidAsync("CreateCardBg");
    }

    
}
